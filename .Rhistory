our_team = c('Arnold Jiang', 'John Woo', 'Tong Dai', 'Willow Yang')
our_team
#| message: false
library(tidyverse)
library(highcharter)
library(gt)
#| message: false
dis_movies = read_csv(file = 'https://www.dropbox.com/scl/fi/q5tot6ylmqvzyv1ve73jk/dis_movies.csv?rlkey=i6nrb7htoimm025kxxitegue9&st=ha0pbdxj&raw=1')
dis_25 <- dis_movies %>%
slice_max(n = 25, box_int) %>%
gt() %>%
tab_header(
title = "Top 25 movies based on worldwide box office revenue"
) %>%
cols_label(
yor = html("Year of Release"),
movie = html("Movie Name"),
box_dom = html("Domestic Revenue"),
box_int = html("International Revenue")
) %>%
opt_stylize(style = 6, color = "cyan")
dis_25
dis_10 <- dis_movies %>%
mutate(
total_worldwide = box_dom + box_int,
percentage = box_int / total_worldwide * 100
) %>%
slice_max(percentage, n = 10) %>%
select(yor, movie, box_dom, box_int) %>%
gt() %>%
tab_header(
title = "Top 10 Movies with the Greatest Portion of Their Worldwide Box Office Revenue From International Sales"
) %>%
cols_label(
yor = html("Year of Release"),
movie = html("Movie Name"),
box_dom = html("Domestic Revenue"),
box_int = html("International Revenue")
) %>%
opt_stylize(style = 6, color = "red")
dis_10
dis_adj <- dis_movies %>%
mutate(
box_dom_adj = box_dom * (1 + 0.03)^{(2024-yor)/(1.5)}
) %>%
gt() %>%
tab_header(
title = "dis_movies with domestic box office revenue adjusted for inflation"
) %>%
cols_label(
yor = html("Year of Release"),
movie = html("Movie Name"),
box_dom = html("Domestic Revenue"),
box_int = html("International Revenue")
) %>%
opt_stylize(style = 6, color = "blue")
dis_adj
#| message: false
dis_plus = read_csv(file = 'https://www.dropbox.com/scl/fi/5kt0kzhnpop3ub9qavnzm/dis_plus.csv?rlkey=b3eqvyhthfpgxxd7sdzzru00y&st=aw0bree0&raw=1')
#| message: false
dis_stock = read_csv(file = 'https://www.dropbox.com/scl/fi/x25yj3rp81dn1tipguqk5/dis_stock.csv?rlkey=6j7gkdei81aipn0kem0i34tit&st=rps4871p&raw=1')
dis_25 <- dis_movies %>%
mutate(
total_worldwide = box_dom + box_int,
) %>%
slice_max(n = 25, total_worldwide) %>%
gt() %>%
tab_header(
title = "Top 25 movies based on worldwide box office revenue"
) %>%
cols_label(
yor = html("Year of Release"),
movie = html("Movie Name"),
box_dom = html("Domestic Revenue"),
box_int = html("International Revenue"),
total_worldwide = html("Worldwide Revenue")
) %>%
opt_stylize(style = 6, color = "cyan")
dis_25
dis_25 <- dis_movies %>%
mutate(
total_worldwide = box_dom + box_int,
) %>%
slice_max(n = 25, total_worldwide) %>%
gt() %>%
tab_header(
title = "Top 25 movies based on worldwide box office revenue"
) %>%
cols_label(
yor = html("Year of Release"),
movie = html("Movie Name"),
box_dom = html("Domestic Revenue"),
box_int = html("International Revenue"),
total_worldwide = html("Worldwide Revenue")
) %>%
opt_stylize(style = 6, color = "cyan")
dis_25
dis_25 <- dis_movies %>%
mutate(
total_worldwide = box_dom + box_int,
) %>%
slice_max(n = 25, total_worldwide) %>%
gt() %>%
tab_header(
title = "Top 25 movies based on worldwide box office revenue"
) %>%
cols_label(
yor = html("Year of Release"),
movie = html("Movie Name"),
box_dom = html("Domestic Revenue"),
box_int = html("International Revenue"),
total_worldwide = html("Worldwide Revenue")
) %>%
opt_stylize(style = 6, color = "cyan")
dis_25
our_team = c('Arnold Jiang', 'John Woo', 'Tong Dai', 'Willow Yang')
our_team
#| message: false
library(tidyverse)
library(highcharter)
library(gt)
#| message: false
dis_movies = read_csv(file = 'https://www.dropbox.com/scl/fi/q5tot6ylmqvzyv1ve73jk/dis_movies.csv?rlkey=i6nrb7htoimm025kxxitegue9&st=ha0pbdxj&raw=1')
dis_25 <- dis_movies %>%
slice_max(n = 25, box_int) %>%
gt() %>%
tab_header(
title = "Top 25 movies based on worldwide box office revenue"
) %>%
cols_label(
yor = html("Year of Release"),
movie = html("Movie Name"),
box_dom = html("Domestic Revenue"),
box_int = html("International Revenue")
) %>%
opt_stylize(style = 6, color = "cyan")
dis_25
dis_10 <- dis_movies %>%
mutate(
total_worldwide = box_dom + box_int,
percentage = box_int / total_worldwide * 100
) %>%
slice_max(percentage, n = 10) %>%
select(yor, movie, box_dom, box_int) %>%
gt() %>%
tab_header(
title = "Top 10 Movies with the Greatest Portion of Their Worldwide Box Office Revenue From International Sales"
) %>%
cols_label(
yor = html("Year of Release"),
movie = html("Movie Name"),
box_dom = html("Domestic Revenue"),
box_int = html("International Revenue")
) %>%
opt_stylize(style = 6, color = "red")
dis_10
dis_adj <- dis_movies %>%
mutate(
box_dom_adj = box_dom * (1 + 0.03)^{(2024-yor)/(1.5)}
) %>%
gt() %>%
tab_header(
title = "dis_movies with domestic box office revenue adjusted for inflation"
) %>%
cols_label(
yor = html("Year of Release"),
movie = html("Movie Name"),
box_dom = html("Domestic Revenue"),
box_int = html("International Revenue")
) %>%
opt_stylize(style = 6, color = "blue")
dis_adj
#| message: false
dis_plus = read_csv(file = 'https://www.dropbox.com/scl/fi/5kt0kzhnpop3ub9qavnzm/dis_plus.csv?rlkey=b3eqvyhthfpgxxd7sdzzru00y&st=aw0bree0&raw=1')
#| message: false
dis_stock = read_csv(file = 'https://www.dropbox.com/scl/fi/x25yj3rp81dn1tipguqk5/dis_stock.csv?rlkey=6j7gkdei81aipn0kem0i34tit&st=rps4871p&raw=1')
dis_25 <- dis_movies %>%
mutate(
total_worldwide = box_dom + box_int,
) %>%
slice_max(n = 25, total_worldwide) %>%
gt() %>%
tab_header(
title = "Top 25 movies based on worldwide box office revenue"
) %>%
cols_label(
yor = html("Year of Release"),
movie = html("Movie Name"),
box_dom = html("Domestic Revenue"),
box_int = html("International Revenue"),
total_worldwide = html("Worldwide Revenue")
) %>%
opt_stylize(style = 6, color = "cyan")
dis_25
dis_100 <- dis_movies %>%
mutate(
total_worldwide = box_dom + box_int,
percentage = box_int / total_worldwide * 100
) %>%
arrange(desc(percentage)) %>%
filter(row_number() <= 100)
dis_10 <- dis_100 %>%
top_n(10, percentage) %>%
select(yor, movie, box_dom, box_int) %>%
gt() %>%
tab_header(
title = "Top 10 Movies with the Greatest Portion of Their Worldwide Box Office Revenue From International Sales"
) %>%
cols_label(
yor = html("Year of Release"),
movie = html("Movie Name"),
box_dom = html("Domestic Revenue"),
box_int = html("International Revenue")
) %>%
opt_stylize(style = 6, color = "red")
dis_10
dis_movies <- dis_movies %>%
mutate(
box_dom_adj = box_dom * (1 + 0.03)^{(2024-yor)/(1.5)}
)
dis_movies %>%
gt() %>%
tab_header(
title = "Disney Movies with Domestic Box Office Revenue Adjusted for Inflation"
) %>%
cols_label(
yor = html("Year of Release"),
movie = html("Movie Name"),
box_dom = html("Domestic Revenue"),
box_int = html("International Revenue"),
box_dom_adj = html("Domestic Revenue (Adjusted)")
) %>%
opt_stylize(style = 6, color = "blue")
dis_movies
dis_movies <- dis_movies %>%
mutate(
box_dom_adj = box_dom * (1 + 0.03)^{(2024-yor)/(1.5)}
)
dis_movies %>%
gt() %>%
tab_header(
title = "Disney Movies with Domestic Box Office Revenue Adjusted for Inflation"
) %>%
cols_label(
yor = html("Year of Release"),
movie = html("Movie Name"),
box_dom = html("Domestic Revenue"),
box_int = html("International Revenue"),
box_dom_adj = html("Domestic Revenue (Adjusted)")
) %>%
opt_stylize(style = 6, color = "blue")
two_thousands_movies <- dis_movies |>
filter(yor >= 2000 & yor <= 2009)
min_box = min(two_thousands_movies$box_dom_adj)
max_box = max(two_thousands_movies$box_dom_adj)
two_thousands_movies |>
ggplot(aes(x = yor, y = box_dom_adj)) +
geom_point() +
labs(title = "Inflation-Adjusted Domestic Revenue of Movies Released in 2000-2009",
x = 'Year of Release',
y = 'Domestic Box Office (Adjusted)') +
lims(y = c(min_box, max_box)) +
theme(
plot.title = element_text(color = 'purple'),
axis.title.x = element_text(color = 'purple'),
axis.title.y = element_text(color = 'purple'),
)
filtered_movies_2 <- dis_movies |>
filter(yor >= 2019 & yor <= 2023)
box_int_by_year <- filtered_movies_2 |>
group_by(yor) |>
summarise(year_box_int = sum(box_int))
box_int_by_year |>
hchart(hcaes(x = yor, y = year_box_int), type = "column") |>
hc_title(text = "Trends in International Revenue of Disney Movies from 2019-2023") |>
hc_xAxis(title = list(text = "Year Of Release")) |>
hc_yAxis(title = list(text = "International Revenue"))
filtered_dis_stocks <- dis_stock |>
mutate(percentage = ((close - open) / open) * 100 ) |>
filter(percentage >= 5 | percentage <= -5)
filtered_dis_stocks |>
gt()
filtered_dis_stocks <- dis_stock |>
mutate(percentage = ((close - open) / open) * 100 ) |>
filter(percentage >= 5 | percentage <= -5)
filtered_dis_stocks |>
gt() |>
tab_header(
title = "Trading Days of DIS Stocks with at least 5% Gain or Loss"
) %>%
cols_label(
open = html("Open"),
high = html("High"),
low = html("Low"),
close = html("Close"),
volume = html("Volume"),
spx = html("SPX"),
shrsout = html("Outstanding Shares"),
percentage = html("Percentage")
) %>%
opt_stylize(style = 6, color = "blue")
filtered_dis_stocks <- dis_stock |>
mutate(percentage = ((close - open) / open) * 100 ) |>
filter(percentage >= 5 | percentage <= -5)
filtered_dis_stocks |>
gt() |>
tab_header(
title = "Trading Days of DIS Stocks with at least 5% Gain or Loss"
) %>%
cols_label(
date = html("Date"),
open = html("Open"),
high = html("High"),
low = html("Low"),
close = html("Close"),
volume = html("Volume"),
spx = html("SPX"),
shrsout = html("Outstanding Shares"),
percentage = html("Per Change")
) %>%
opt_stylize(style = 6, color = "blue")
filtered_dis_stocks <- dis_stock |>
mutate(percentage = ((close - open) / open) * 100 ) |>
filter(percentage >= 5 | percentage <= -5)
filtered_dis_stocks |>
gt() |>
tab_header(
title = "Trading Days of DIS Stocks with at least 5% Gain or Loss"
) %>%
cols_label(
date = html("Date"),
open = html("Open"),
high = html("High"),
low = html("Low"),
close = html("Close"),
volume = html("Volume"),
spx = html("SPX"),
shrsout = html("Shares Outstanding"),
percentage = html("Per Change")
) %>%
opt_stylize(style = 6, color = "pink")
filtered_dis_stocks <- dis_stock |>
mutate(percentage = ((close - open) / open) * 100 ) |>
filter(percentage >= 5 | percentage <= -5)
filtered_dis_stocks |>
gt() |>
tab_header(
title = "Trading Days of DIS Stocks with at least 5% Gain or Loss"
) %>%
cols_label(
date = html("Date"),
open = html("Open"),
high = html("High"),
low = html("Low"),
close = html("Close"),
volume = html("Volume"),
spx = html("SPX"),
shrsout = html("Outstanding Shares"),
percentage = html("Per Change")
) %>%
opt_stylize(style = 6, color = "pink")
peak_market_cap_date = dis_stock |>
mutate(market_cap = close * shrsout) |>
filter(marketcap == max(marketcap)) |>
pull(date)
peak_market_cap_date = dis_stock |>
mutate(market_cap = close * shrsout) |>
filter(market_cap == max(market_cap)) |>
pull(date)
paste("The market capitalization of DIS was at its peak on", peak_market_cap_date)
filtered_dis_stocks <- dis_stock |>
mutate(percentage = ((close - open) / open) * 100 ) |>
filter(percentage >= 5 | percentage <= -5)
filtered_dis_stocks |>
gt() |>
tab_header(
title = "Trading Days of DIS Stocks with at least 5% Gain or Loss"
) %>%
cols_label(
date = html("Date"),
open = html("Open"),
high = html("High"),
low = html("Low"),
close = html("Close"),
volume = html("Volume"),
spx = html("SPX"),
shrsout = html("Outstanding Shares"),
percentage = html("Per Change")
) %>%
opt_stylize(style = 6, color = "pink")
peak_market_cap_date = dis_stock |>
mutate(market_cap = close * shrsout) |>
filter(market_cap == max(market_cap)) |>
pull(date)
paste("The market capitalization of DIS was at its peak on", peak_market_cap_date)
peak_market_cap_date = dis_stock |>
mutate(market_cap = close * shrsout) |>
filter(market_cap == max(market_cap)) |>
pull(date)
paste("The market capitalization of DIS was at its peak on", peak_market_cap_date)
monthly_marketcap <- dis_stock |>
group_by(month = lubridate::floor_date(date, "month"))
monthly_marketcap |> gt()
peak_market_cap_date = dis_stock |>
mutate(market_cap = close * shrsout) |>
filter(market_cap == max(market_cap)) |>
pull(date)
paste("The market capitalization of DIS was at its peak on", peak_market_cap_date)
monthly_marketcap <- dis_stock |>
mutate(month = month(date)) |>
group_by(month)
monthly_marketcap |> gt()
peak_market_cap_date = dis_stock |>
mutate(market_cap = close * shrsout) |>
filter(market_cap == max(market_cap)) |>
pull(date)
paste("The market capitalization of DIS was at its peak on", peak_market_cap_date)
monthly_marketcap <- dis_stock |>
mutate(month = month(date), year = year(date)) |>
group_by(month, year)
monthly_marketcap |> gt()
peak_market_cap_date = dis_stock |>
mutate(market_cap = close * shrsout) |>
filter(market_cap == max(market_cap)) |>
pull(date)
paste("The market capitalization of DIS was at its peak on", peak_market_cap_date)
monthly_marketcap <- dis_stock |>
mutate(month = month(date), year = year(date)) |>
group_by(month, year)
filtered_dis_stocks <- dis_stock |>
mutate(percentage = ((close - open) / open) * 100 ) |>
filter(percentage >= 5 | percentage <= -5)
filtered_dis_stocks |>
gt() |>
tab_header(
title = "Trading Days of DIS Stocks with at least 5% Gain or Loss"
) %>%
cols_label(
date = html("Date"),
open = html("Open"),
high = html("High"),
low = html("Low"),
close = html("Close"),
volume = html("Volume"),
spx = html("SPX"),
shrsout = html("Outstanding Shares"),
percentage = html("Per Change")
) %>%
opt_stylize(style = 6, color = "pink")
